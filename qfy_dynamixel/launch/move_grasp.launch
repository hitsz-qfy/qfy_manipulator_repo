<launch>
<!-- Start controller_manager-->
	<node name="dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">
        <rosparam>
            namespace: dxl_manager
            serial_ports:
                pan_tilt_port_ax:
                    port_name: "/dev/dynamixel_ax"
                    baud_rate: 1000000
                    min_motor_id: 1
                    max_motor_id: 25
                    update_rate: 20
                pan_tilt_port_mx:
                    port_name: "/dev/dynamixel_mx"
                    baud_rate: 1000000
                    min_motor_id: 1
                    max_motor_id: 25
                    update_rate: 20
        </rosparam>
    </node>

<!-- Start joint controller -->
    <rosparam file="$(find qfy_dynamixel)/config/joint_456.yaml" command="load"/>
    <node name="controller_spawner_ax" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=pan_tilt_port_ax                
				joint4_controller                       
                joint5_controller
                joint6_controller
                joint7_controller
                "
          output="screen"/>

    <rosparam file="$(find qfy_dynamixel)/config/joint_123.yaml" command="load"/>
    <node name="controller_spawner_mx" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=pan_tilt_port_mx
                joint1_controller
                joint2_controller
                joint3_controller
                "
          output="screen"/>
<!-- Start joints trajectory controller controller -->
    <rosparam file="$(find qfy_dynamixel)/config/joint_multi_trajectory_controller.yaml" command="load"/>
    <node name="controller_spawner_meta_ax" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=pan_tilt_port_ax
                --type=meta
                a_arm_controller
                joint4_controller
                joint5_controller
                joint6_controller
                joint7_controller                                
                "
                
     output="screen"/>

    <node name="controller_spawner_meta_mx" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=pan_tilt_port_mx
                --type=meta
                m_arm_controller
                joint1_controller
                joint2_controller
                joint3_controller
                                                
                "
                
     output="screen"/>

   <!-- <node name="trajectory_sub_client" pkg="qfy_dynamixel" type="trajectory_sub_client.py"/> -->
   <node name="trajectory_ax_client" pkg="qfy_dynamixel" type="trajectory_ax_client.py"/>
   <node name="trajectory_mx_client" pkg="qfy_dynamixel" type="trajectory_mx_client.py"/>
   <!-- apriltag -->
     <node  pkg="apriltags_ros" type="apriltag_detector_node" name="apriltag_detector">
    <rosparam param="tag_descriptions">[
      {id: 47, size: 0.032000,frame_id: target1},
      ]
    </rosparam>
  </node>

  <node ns="camera" pkg="uvc_camera" type="uvc_camera_node" name="uvc_camera" output="screen">
    <param name="width" type="int" value="640" />
    <param name="height" type="int" value="480" />
    <param name="format" type="string" value="jpeg" />
    <param name="fps" type="int" value="60" />
    <param name="frame" type="string" value="webcam" />
    <param name="device" type="string" value="/dev/video0" />
    <param name="camera_info_url" type="string" value="file://$(find ffcalib)/config/ost_c.yaml" />
    <remap from="/camera/camera_info" to="/f_camera/camera_info"/>
  </node>

  <node pkg="image_transport" name="republish_uvc"  type="republish" args="compressed in:=/camera/image_raw _image_transport:=compressed raw out:=/f_camera/image_raw" />
  <node ns="f_camera"  pkg="image_proc" name="image_proc"  type="image_proc" />
</launch>
