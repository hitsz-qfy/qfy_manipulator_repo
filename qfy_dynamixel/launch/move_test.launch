<launch>
<!-- Start controller_manager-->
	<node name="dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">
        <rosparam>
            namespace: dxl_manager
            serial_ports:
                pan_tilt_port_ax:
                    port_name: "/dev/dynamixel_ax"
                    baud_rate: 1000000
                    min_motor_id: 1
                    max_motor_id: 25
                    update_rate: 20
                pan_tilt_port_mx:
                    port_name: "/dev/dynamixel_mx"
                    baud_rate: 1000000
                    min_motor_id: 1
                    max_motor_id: 25
                    update_rate: 20
        </rosparam>
    </node>

<!-- Start joint controller -->
    <rosparam file="$(find qfy_dynamixel)/config/joint_multi.yaml" command="load"/>
    <node name="controller_spawner_mx" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=pan_tilt_port_mx
                mx_joint_controller
                "
          output="screen"/>

    <rosparam file="$(find qfy_dynamixel)/config/joint_multi.yaml" command="load"/>
    <node name="controller_spawner_ax" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=pan_tilt_port_ax
                ax_joint_controller
                "
          output="screen"/>

    <node pkg="qfy_dynamixel" name="joint_mx" type="multi_joint_trj_mx.py" output="screen"/>
	<node pkg="qfy_dynamixel" name="joint_ax" type="multi_joint_trj_ax.py" output="screen"/>

<!--pbvs node-->
<!-- apriltag -->
  <!--<node  pkg="apriltags_ros" type="apriltag_detector_node" name="apriltag_detector">-->
    <!--<rosparam param="tag_descriptions">[-->
      <!--{id: 47, size: 0.032000,frame_id: target1},-->
      <!--]-->
    <!--</rosparam>-->
  <!--</node>-->
<!--ibvs/hybrid_vs node-->
  <node  pkg="qfy_ibvs" type="apriltag_points_node" name="apriltag_points_node" output="screen">
    <rosparam param="tag_descriptions">[
      {id: 48, size: 0.034000,frame_id: target1},
      ]
    </rosparam>
  </node>

  <node ns="camera" pkg="uvc_camera" type="uvc_camera_node" name="uvc_camera" output="screen">
    <param name="width" type="int" value="640" />
    <param name="height" type="int" value="480" />
    <param name="format" type="string" value="jpeg" />
    <param name="fps" type="int" value="60" />
    <param name="frame" type="string" value="webcam" />
    <param name="device" type="string" value="/dev/video0" />
    <param name="camera_info_url" type="string" value="file://$(find ffcalib)/config/ost_c.yaml" />
    <remap from="/camera/camera_info" to="/f_camera/camera_info"/>
  </node>

  <node pkg="image_transport" name="republish_uvc"  type="republish" args="compressed in:=/camera/image_raw _image_transport:=compressed raw out:=/f_camera/image_raw" />
  <node ns="f_camera"  pkg="image_proc" name="image_proc"  type="image_proc" />

</launch>
